}/*  Nick Sweeting 2013/10/09
    References vs Values in C++
    MIT License
    Takes input and removes puctuation and spaces, using two different methods.
    It is referred from: https://github.com/pirate/Cpp-Data-Structures/
*/

#include <stdlib.h>
#include <iostream>
using namespace std;


// returns true if input character q is puctuation, else false
bool ispunctuation(char character) {
    char punctuation[29] = "&#@=+*{}!;?<>,:'()[].-_^$|`";

    for (int symbol = 0 ; symbol < 28 ; symbol++) 
      if (character == punctuation[symbol])
        return true;

    return false;
}


char* modifyAndCopy(char *raw_input) {
    // normal line width is 80, but add a few for edge cases
    char* copy = new char[85]; 
    int punct = 0;
    for (int symbol = 0; symbol < sizeof(raw_input) ; symbol++) {
        // check if the value is punctuation
        if (ispunctuation(raw_input[symbol])) punct++; 
        else {
            // if not punctuation, copy the symbol
            copy[symbol - punct] = raw_input[symbol]; 
            // move to the next position

        }
    }
    return copy;
}
char* modifyInPlace(char *raw_input) {
     int punct = 0;
     for (int symbol = 0; symbol < sizeof(raw_input) ; symbol++) {
         // check if the value is punctuation
         if (ispunctuation(raw_input[symbol])) punct++; 
         else {
             // if not punctuation, copy the symbol
             raw_input[symbol - punct] = raw_input[symbol];       
         }
     }
     return raw_input;
}

int main() {
    // user input
    char raw_input[80] = {0};
    cout << "Please input something with punctuation in it: ";
    cin.getline(raw_input,80);

    cout << "Modify and Copy: " << endl;
    cout << "Original: " << raw_input << endl;
    cout << "Modified: " << modifyAndCopy(raw_input) << endl << endl;

    cout << "Modify in Place: " << endl;
    cout << "Original: " << raw_input << endl;
    cout << "Modified: " << modifyInPlace(raw_input) << endl;
}
